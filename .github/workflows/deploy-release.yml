# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy to GitHub Releases
on:
    push:
        branches:
            - main

# Cancel all previous workflow runs for the same branch that have not yet completed.
concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    bundle:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@main

            - name: Setup Node.js
              uses: actions/setup-node@main

            - name: Cache npm dependencies
              id: npm-cache
              uses: actions/cache@v4
              with:
                  path: node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node_modules-

            - name: Install dependencies
              run: npm ci
              if: steps.npm-cache.outputs.cache-hit != 'true'

            - name: Build GTM Script
              run: npm run build

            - name: Upload Script
              uses: actions/upload-artifact@main
              with:
                  name: bundle
                  path: './dist/gtm'

    deploy:
        needs: bundle
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@main

            - name: Download Plugin
              uses: actions/download-artifact@main
              with:
                  name: plugin
                  path: './dist/gtm'

            - name: Get version
              id: version
              run: |
                  echo "VERSION=$(grep -Po 'Version: \K.*' ${{ inputs.plugin_name }}.php)" >> "$GITHUB_ENV"
              shell: bash

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      ${{ inputs.plugin_name }}.zip
                  token: ${{ secrets.GITHUB_TOKEN }}
                  tag_name: v${{ env.VERSION }}
                  name: v${{ env.VERSION }}
                  generate_release_notes: true
